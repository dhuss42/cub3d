
MAP:
valid characters: 1, 0, N, E, S, W

map open
tabs or invalid characters
more than one player
no player
no map

TEXTURES: (NO, WE, SO, EA)
missing
not in one line
duplicate (?)
non valid files -> after parsing
are directory -> after parsing

COLORS: (F, C)
missing
duplicate (?)
invalid characters instead of rgb numbers
negative numbers
numbers >255 (?)
missing number (255,0,)
too many numbers
not in one line

GENERAL:
elements in the same line
map not at the end of file / word after map
sensless content (?)
filename not ending on .cub
empty file

PLAN:
DONE 1. Search for NO, WE, SO, EA, F and C, jump whitespaces and read following letters
	check for duplicate
DONE 2. files: ->read filename until whitespace or newline
	if somthing after it, error
3. DONE colors: ->read number until ','.
	DONE Transform to int
	DONE Check if valid number.
	DONE Do this until we have 3 numbers
	DONE error if != 3 numbers
	DONE if after 3. number is something, error
	DONE Transform it to uint32_t (0xFF0000)
4. map: before: skip any newlines
	set flag for beginning map?
	indicated by numbers in line.
	or indicated because colors and textures aleady exist
	count lines with getnext line. Remember line where map begins
	for writing into map, do another round of getnextline.
	read until eof and safe map in **map
5. check for other characters than whitespace and newlines after map ->later (?)

after reading:
1. check if everything present (NO, WE, SO, EA, F, C , map)
2. files: check if files of textures valid (just do fd = open(file, O_RDONLY) ?)
	check if filename ending in .cub
3. map: check if any unvalid characters (also newline without other content?) (this includes also characters after map end)
	check if player == 1
	floodfill from player position to check if map is closed

valid:
NO ./assets/tile_0.png
WE ./assets/tile_1.png
SO ./assets/tile_2.png
EA ./assets/tile_3.png
F 66, 110, 65
C 142,191,147

111111111
100000001
1000N0001
100000001
111111111
